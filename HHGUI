local p = game:GetService("Players").LocalPlayer
local pg = p:WaitForChild("PlayerGui")

local s = Instance.new("ScreenGui")
s.Name = "HHGUI"
s.ResetOnSpawn = false
s.Parent = pg

local f = Instance.new("Frame", s)
f.Size = UDim2.new(0, 260, 0, 234)
f.Position = UDim2.new(0, 20, 0, 60)
f.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
f.Active = true
f.Draggable = true
Instance.new("UICorner", f).CornerRadius = UDim.new(0, 8)

local i = Instance.new("ImageLabel", f)
i.Size = UDim2.new(1, -180, 0, 80)
i.Position = UDim2.new(0, 200, 0, -35)
i.BackgroundTransparency = 1
i.Image = "rbxassetid://121523454509020"

local t = Instance.new("TextLabel", f)
t.Size = UDim2.new(1, -65, 0, 28)
t.Position = UDim2.new(0, 8, 0, 8)
t.BackgroundTransparency = 1
t.Text = "HHGUI v1.22"
t.TextColor3 = Color3.new(1,1,1)
t.TextXAlignment = Enum.TextXAlignment.Left
t.Font = Enum.Font.SourceSansBold
t.TextScaled = true

local content = Instance.new("Frame", f)
content.Size = UDim2.new(1, 0, 1, -40)
content.Position = UDim2.new(0, 0, 0, 36)
content.BackgroundTransparency = 1
content.Draggable = true

local sf = Instance.new("ScrollingFrame", f)
sf.Size = UDim2.new(1, 0, 1, -96)
sf.Position = UDim2.new(0, 0, 0, 42)
sf.BackgroundTransparency = 1
sf.BorderSizePixel = 0
sf.ScrollBarThickness = 3
sf.Draggable = true

local function makeLbl(parent, txt, y)
	local l = Instance.new("TextLabel", parent)
	l.Size = UDim2.new(0, 120, 0, 22)
	l.Position = UDim2.new(0, 8, 0, y)
	l.BackgroundTransparency = 1
	l.Text = txt
	l.TextColor3 = Color3.new(1,1,1)
	l.TextXAlignment = Enum.TextXAlignment.Left
	l.Font = Enum.Font.SourceSans
	l.TextSize = 16
	return l
end

local function makeBox(parent, y)
	local b = Instance.new("TextBox", parent)
	b.Size = UDim2.new(0, 118, 0, 22)
	b.Position = UDim2.new(0, 134, 0, y)
	b.PlaceholderText = "Value"
	b.Font = Enum.Font.SourceSans
	b.TextSize = 16
	b.Text = ""
	b.TextColor3 = Color3.new(0,0,0)
	b.BackgroundColor3 = Color3.fromRGB(240,240,240)
	Instance.new("UICorner", b).CornerRadius = UDim.new(0, 4)

	local g = Instance.new("UIGradient", b)
	g.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(220,220,220)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
	}
	g.Rotation = 90

	return b
end

makeLbl(sf, "WalkSpeed:", 2)
local ws = makeBox(sf, 2)
makeLbl(sf, "JumpPower:", 30)
local jp = makeBox(sf, 30)
makeLbl(sf, "JumpHeight:", 58)
local jh = makeBox(sf, 58)
makeLbl(sf, "Health:", 86)
local hp = makeBox(sf, 86)
makeLbl(sf, "MaxHealth:", 114)
local mh = makeBox(sf, 114)
makeLbl(sf, "HipHeight:", 142)
local hh = makeBox(sf, 142)


local apply = Instance.new("TextButton", content)
apply.Size = UDim2.new(0, 118, 0, 28)
apply.Position = UDim2.new(0, 8, 0, 156)
apply.Text = "Apply"
apply.Font = Enum.Font.SourceSansBold
apply.TextSize = 18
apply.TextColor3 = Color3.fromRGB(30,30,30)
apply.BackgroundColor3 = Color3.fromRGB(0,255,0)
Instance.new("UICorner", apply).CornerRadius = UDim.new(0, 4)

local gApply = Instance.new("UIGradient", apply)
gApply.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0,255,100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0,180,0))
}
gApply.Rotation = 90

local sa = Instance.new("Sound", apply)
sa.SoundId = "rbxassetid://1673280232"

local reset = Instance.new("TextButton", content)
reset.Size = UDim2.new(0, 118, 0, 28)
reset.Position = UDim2.new(0, 134, 0, 156)
reset.Text = "Reset"
reset.Font = Enum.Font.SourceSansBold
reset.TextSize = 18
reset.TextColor3 = Color3.fromRGB(30,30,30)
reset.BackgroundColor3 = Color3.fromRGB(255,0,0)
Instance.new("UICorner", reset).CornerRadius = UDim.new(0, 4)

local gReset = Instance.new("UIGradient", reset)
gReset.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255,100,100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(180,0,0))
}
gReset.Rotation = 90

local sr = Instance.new("Sound", reset)
sr.SoundId = "rbxassetid://1673280232"

local hum
local ow, oj, oh, ohp, omh

local function formatNum(n)
    local rounded = math.floor(n * 10 + 0.5) / 10
    if rounded % 1 == 0 then
        return tostring(rounded)
    else
        return tostring(rounded)
    end
end

local function upd()
	if not hum then return end
	ws.PlaceholderText = tostring(hum.WalkSpeed)
	jp.PlaceholderText = tostring(hum.JumpPower)
	jh.PlaceholderText = formatNum(hum.JumpHeight)
	hp.PlaceholderText = tostring(math.floor(hum.Health))
	mh.PlaceholderText = tostring(math.floor(hum.MaxHealth))
	hh.PlaceholderText = formatNum(hum.HipHeight)
end

local function applyVals()
	if not hum then return end
	local w = tonumber(ws.Text)
	local j = tonumber(jp.Text)
	local h = tonumber(jh.Text)
	local he = tonumber(hp.Text)
	local mhe = tonumber(mh.Text)
	local hip = tonumber(hh.Text)
	if w then hum.WalkSpeed = math.clamp(w, 0, 1000000) end
	if j then hum.JumpPower = math.clamp(j, 0, 1000) end
	if h then hum.JumpHeight = math.clamp(h, 0, 1000000) end
	if mhe then hum.MaxHealth = math.clamp(mhe, 0, 1000000) end
	if he then hum.Health = math.clamp(he, 0, hum.MaxHealth) end
	if hip then hum.HipHeight = math.clamp(hip, 0, 2048) end
	upd()
end

local function onChar(c)
	hum = c:WaitForChild("Humanoid", 5)
	if hum then 
		ow, oj, oh, ohp, omh, ohh = hum.WalkSpeed, hum.JumpPower, hum.JumpHeight, hum.Health, hum.MaxHealth, hum.HipHeight
		upd()
	end
end

local function resetVals()
	if hum then
		hum.WalkSpeed = ow
		hum.JumpPower = oj
		hum.JumpHeight = oh
		hum.MaxHealth = omh
		hum.Health = ohp
		hum.HipHeight = ohh
		upd()
	end
end

if p.Character then onChar(p.Character) end
p.CharacterAdded:Connect(onChar)
apply.MouseButton1Click:Connect(function()
    sa:Play()
    applyVals()
end)

reset.MouseButton1Click:Connect(function()
    sr:Play()
    resetVals()
end)

local UIS = game:GetService("UserInputService")
UIS.InputBegan:Connect(function(i, g)
	if g then return end
	if i.KeyCode == Enum.KeyCode.G and (UIS:IsKeyDown(Enum.KeyCode.LeftControl) or UIS:IsKeyDown(Enum.KeyCode.RightControl)) then
		f.Visible = not f.Visible
	end
end)
