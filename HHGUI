local p = game:GetService("Players").LocalPlayer
local pg = p:WaitForChild("PlayerGui")

local s = Instance.new("ScreenGui")
s.Name = "HHGUI"
s.ResetOnSpawn = false
s.Parent = pg

local f = Instance.new("Frame", s)
f.Size = UDim2.new(0, 260, 0, 234)
f.Position = UDim2.new(0, 20, 0, 60)
f.BackgroundTransparency = 0.05
f.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
f.Active = true
f.Draggable = true
Instance.new("UICorner", f).CornerRadius = UDim.new(0, 8)

local fg = Instance.new("UIGradient", f)
fg.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(90, 90, 90)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}

fg.Rotation = 270

local imag = Instance.new("ImageLabel", f)
imag.Size = UDim2.new(1, -180, 0, 80)
imag.Position = UDim2.new(0, 200, 0, -35)
imag.BackgroundTransparency = 1
imag.Image = "rbxassetid://121523454509020"

local t = Instance.new("TextLabel", f)
t.Size = UDim2.new(1, -65, 0, 28)
t.Position = UDim2.new(0, 8, 0, 8)
t.BackgroundTransparency = 1
t.Text = "HHGUI v1.24.4"
t.TextColor3 = Color3.new(1,1,1)
t.TextXAlignment = Enum.TextXAlignment.Left
t.Font = Enum.Font.Sarpanch
t.TextScaled = true

local tstroke = Instance.new("UIStroke", t)
tstroke.Color = Color3.fromRGB(255,255,255)
tstroke.Thickness = 0.5
tstroke.Transparency = 0.25

local content = Instance.new("Frame", f)
content.Size = UDim2.new(1, 0, 1, -40)
content.Position = UDim2.new(0, 0, 0, 36)
content.BackgroundTransparency = 1
content.Draggable = true

local sf = Instance.new("ScrollingFrame", f)
sf.Size = UDim2.new(1, 0, 1, -96)
sf.Position = UDim2.new(0, 0, 0, 42)
sf.BackgroundTransparency = 1
sf.BorderSizePixel = 0
sf.ScrollBarThickness = 3
sf.Draggable = true

local madeby = Instance.new("TextLabel", sf)
madeby.Size = UDim2.new(0, 120, 0, 22)
madeby.Position = UDim2.new(0, 8, 0, 448)
madeby.BackgroundTransparency = 1
madeby.Text = "made by srekcaH2"
madeby.Font = Enum.Font.Sarpanch
madeby.TextTransparency = 0.75
madeby.TextSize = 14
madeby.TextColor3 = Color3.fromRGB(255,255,255)
madeby.TextXAlignment = Enum.TextXAlignment.Left

local ctrlg = Instance.new("TextLabel", sf)
ctrlg.Size = UDim2.new(0, 120, 0, 22)
ctrlg.Position = UDim2.new(0, 8, 0, 426)
ctrlg.BackgroundTransparency = 1
ctrlg.Text = "ctrl+G to hide/unhide"
ctrlg.Font = Enum.Font.Sarpanch
ctrlg.TextTransparency = 0.75
ctrlg.TextSize = 14
ctrlg.TextColor3 = Color3.fromRGB(255,255,255)
ctrlg.TextXAlignment = Enum.TextXAlignment.Left

local ctrlr = Instance.new("TextLabel", sf)
ctrlr.Size = UDim2.new(0, 120, 0, 22)
ctrlr.Position = UDim2.new(0, 8, 0, 404)
ctrlr.BackgroundTransparency = 1
ctrlr.Text = "ctrl+R to reset"
ctrlr.Font = Enum.Font.Sarpanch
ctrlr.TextTransparency = 0.75
ctrlr.TextSize = 14
ctrlr.TextColor3 = Color3.fromRGB(255,255,255)
ctrlr.TextXAlignment = Enum.TextXAlignment.Left

local ctrle = Instance.new("TextLabel", sf)
ctrle.Size = UDim2.new(0, 120, 0, 22)
ctrle.Position = UDim2.new(0, 8, 0, 382)
ctrle.BackgroundTransparency = 1
ctrle.Text = "ctrl+E to apply"
ctrle.Font = Enum.Font.Sarpanch
ctrle.TextTransparency = 0.75
ctrle.TextSize = 14
ctrle.TextColor3 = Color3.fromRGB(255,255,255)
ctrle.TextXAlignment = Enum.TextXAlignment.Left

local function makeLbl(parent, txt, y)
	local l = Instance.new("TextLabel", parent)
	l.Size = UDim2.new(0, 120, 0, 22)
	l.Position = UDim2.new(0, 8, 0, y)
	l.BackgroundTransparency = 1
	l.Text = txt
	l.TextColor3 = Color3.new(1,1,1)
	l.TextXAlignment = Enum.TextXAlignment.Left
	l.Font = Enum.Font.Sarpanch
	l.TextSize = 16
	return l
end

local function makeBox(parent, y)
	local b = Instance.new("TextBox", parent)
	b.Size = UDim2.new(0, 118, 0, 22)
	b.Position = UDim2.new(0, 134, 0, y)
	b.PlaceholderText = ""
	b.Font = Enum.Font.Sarpanch
	b.TextSize = 16
	b.Text = ""
	b.BackgroundTransparency = 0.05
	b.TextColor3 = Color3.new(0,0,0)
	b.BackgroundColor3 = Color3.fromRGB(240,240,240)
	Instance.new("UICorner", b).CornerRadius = UDim.new(0, 4)

	local g = Instance.new("UIGradient", b)
	g.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0, Color3.fromRGB(220,220,220)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))
	}
	g.Rotation = 90

	return b
end

makeLbl(sf, "WalkSpeed:", 2)
local ws = makeBox(sf, 2)
makeLbl(sf, "JumpPower:", 30)
local jp = makeBox(sf, 30)
makeLbl(sf, "JumpHeight:", 58)
local jh = makeBox(sf, 58)
makeLbl(sf, "Health:", 86)
local hp = makeBox(sf, 86)
makeLbl(sf, "MaxHealth:", 114)
local mh = makeBox(sf, 114)
makeLbl(sf, "HipHeight:", 142)
local hh = makeBox(sf, 142)
makeLbl(sf, "MaxSlopeAngle:", 170)
local msa = makeBox(sf, 170)
makeLbl(sf, "Gravity:", 198)
local grav = makeBox(sf, 198)
makeLbl(sf, "CameraMaxZoom:", 226)
local camMax = makeBox(sf, 226)
makeLbl(sf, "CameraMinZoom:", 254)
local camMin = makeBox(sf, 254)

local apply = Instance.new("TextButton", content)
apply.Size = UDim2.new(0, 118, 0, 28)
apply.Position = UDim2.new(0, 8, 0, 156)
apply.Text = "Apply"
apply.Font = Enum.Font.Sarpanch
apply.TextSize = 18
apply.TextColor3 = Color3.fromRGB(0,0,0)
apply.BackgroundColor3 = Color3.fromRGB(0,255,0)
Instance.new("UICorner", apply).CornerRadius = UDim.new(0, 4)

local gApply = Instance.new("UIGradient", apply)
gApply.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0,255,100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0,180,0))
}
gApply.Rotation = 90

local sa = Instance.new("Sound", apply)
sa.SoundId = "rbxassetid://6324790483"

local reset = Instance.new("TextButton", content)
reset.Size = UDim2.new(0, 118, 0, 28)
reset.Position = UDim2.new(0, 134, 0, 156)
reset.Text = "Reset"
reset.Font = Enum.Font.Sarpanch
reset.TextSize = 18
reset.TextColor3 = Color3.fromRGB(0,0,0)
reset.BackgroundColor3 = Color3.fromRGB(255,0,0)
Instance.new("UICorner", reset).CornerRadius = UDim.new(0, 4)

local gReset = Instance.new("UIGradient", reset)
gReset.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255,100,100)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(180,0,0))
}
gReset.Rotation = 90

local sr = Instance.new("Sound", reset)
sr.SoundId = "rbxassetid://6324790483"

local hum

local ow, oj, oh, ohp, omh, ohh, omsa

local def_ow, def_oj, def_oh, def_ohp, def_omh, def_ohh, def_omsa
local ograv, ocMax, ocMin

local function formatNum(n)
    local rounded = math.floor(n * 10 + 0.5) / 10
    if rounded % 1 == 0 then
        return tostring(rounded)
    else
        return tostring(rounded)
    end
end

local function upd()
	if not hum then return end
	ws.PlaceholderText = formatNum(hum.WalkSpeed)
	jp.PlaceholderText = formatNum(hum.JumpPower)
	jh.PlaceholderText = formatNum(hum.JumpHeight)
	hp.PlaceholderText = formatNum(math.floor(hum.Health))
	mh.PlaceholderText = formatNum(math.floor(hum.MaxHealth))
	hh.PlaceholderText = formatNum(hum.HipHeight)
	msa.PlaceholderText = formatNum(hum.MaxSlopeAngle)
	grav.PlaceholderText = formatNum(workspace.Gravity)
	camMax.PlaceholderText = formatNum(p.CameraMaxZoomDistance)
	camMin.PlaceholderText = formatNum(p.CameraMinZoomDistance)
end

local function applyVals()
	if not hum then return end
	local w = tonumber(ws.Text)
	local j = tonumber(jp.Text)
	local h = tonumber(jh.Text)
	local he = tonumber(hp.Text)
	local mhe = tonumber(mh.Text)
	local hip = tonumber(hh.Text)
	local slope = tonumber(msa.Text)
	local g = tonumber(grav.Text)
	local cMax = tonumber(camMax.Text)
	local cMin = tonumber(camMin.Text)
	if w then hum.WalkSpeed = math.clamp(w, 0, 1000000) end
	if j then hum.JumpPower = math.clamp(j, 0, 1000000) end
	if h then hum.JumpHeight = math.clamp(h, 0, 1000000) end
	if mhe then hum.MaxHealth = math.clamp(mhe, 0, 1000000) end
	if he then hum.Health = math.clamp(he, 0, hum.MaxHealth) end
	if hip then hum.HipHeight = math.clamp(hip, 0, 1000000) end
	if slope then hum.MaxSlopeAngle = math.clamp(slope, 0, 1000000) end
	if g then workspace.Gravity = math.clamp(g, 0, 1000000) end
	if cMax then p.CameraMaxZoomDistance = math.clamp(cMax, 0, 1000000) end
	if cMin then p.CameraMinZoomDistance = math.clamp(cMin, 0, 1000000) end
	upd()
end

local function onChar(c)
	hum = c:WaitForChild("Humanoid", 5)
	if hum then
		
		ow, oj, oh, ohp, omh, ohh, omsa =
			hum.WalkSpeed, hum.JumpPower, hum.JumpHeight,
			hum.Health, hum.MaxHealth, hum.HipHeight, hum.MaxSlopeAngle

		if def_ow == nil then
			def_ow, def_oj, def_oh, def_ohp, def_omh, def_ohh, def_omsa =
				ow, oj, oh, ohp, omh, ohh, omsa
		end
		if ograv == nil then ograv = workspace.Gravity end
		if ocMax == nil then ocMax = p.CameraMaxZoomDistance end
		if ocMin == nil then ocMin = p.CameraMinZoomDistance end

		hum.Died:Connect(function()
			task.wait(0.1)
			workspace.Gravity = ograv
			p.CameraMaxZoomDistance = ocMax
			p.CameraMinZoomDistance = ocMin
		end)

		upd()
	end
end

local function resetVals()
	if hum then

		if def_ow then hum.WalkSpeed = def_ow end
		if def_oj then hum.JumpPower = def_oj end
		if def_oh then hum.JumpHeight = def_oh end
		if def_omh then hum.MaxHealth = def_omh end
		if def_ohp then hum.Health = def_ohp end
		if def_ohh then hum.HipHeight = def_ohh end
		if def_omsa then hum.MaxSlopeAngle = def_omsa end

		if ograv then workspace.Gravity = ograv end
		if ocMax then p.CameraMaxZoomDistance = ocMax end
		if ocMin then p.CameraMinZoomDistance = ocMin end
		
		upd()
	end
end

if p.Character then onChar(p.Character) end
p.CharacterAdded:Connect(onChar)

apply.MouseButton1Click:Connect(function()
    sa:Play()
    applyVals()
end)

reset.MouseButton1Click:Connect(function()
    sr:Play()
    resetVals()
end)

local UIS = game:GetService("UserInputService")

UIS.InputBegan:Connect(function(i, processed)
	if processed then return end

	local ctrl = UIS:IsKeyDown(Enum.KeyCode.LeftControl) or UIS:IsKeyDown(Enum.KeyCode.RightControl)
	if not ctrl then return end

	if i.KeyCode == Enum.KeyCode.G then
		f.Visible = not f.Visible

	elseif i.KeyCode == Enum.KeyCode.E then
		sa:Play()
		applyVals()

	elseif i.KeyCode == Enum.KeyCode.R then
		sr:Play()
		resetVals()
	end
end)
