local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- === GUI SETUP ===
local gui = Instance.new("ScreenGui")
gui.Name = "SpeedGui"
gui.ResetOnSpawn = false
gui.Parent = playerGui

-- === MAIN WINDOW ===
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 180)
frame.Position = UDim2.new(0, 50, 0, 70)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local stroke = Instance.new("UIStroke", frame)
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(90, 90, 255)

-- === TITLE BAR ===
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, -40, 0, 28)
title.Position = UDim2.new(0, 12, 0, 8)
title.BackgroundTransparency = 1
title.Text = "WalkSpeed & JumpPower"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left

-- === MINIMIZE BUTTON ===
local minimize = Instance.new("TextButton", frame)
minimize.Size = UDim2.new(0, 26, 0, 26)
minimize.Position = UDim2.new(1, -34, 0, 8)
minimize.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
minimize.Text = "-"
minimize.TextColor3 = Color3.new(1, 1, 1)
minimize.Font = Enum.Font.GothamBold
minimize.TextSize = 22
Instance.new("UICorner", minimize).CornerRadius = UDim.new(1, 0)

-- === RESTORE BUTTON ===
local restoreBtn = Instance.new("TextButton", gui)
restoreBtn.Size = UDim2.new(0, 36, 0, 36)
restoreBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
restoreBtn.Text = "+"
restoreBtn.TextColor3 = Color3.new(1, 1, 1)
restoreBtn.Font = Enum.Font.GothamBold
restoreBtn.TextSize = 26
restoreBtn.Visible = false
restoreBtn.Active = true
restoreBtn.Draggable = true
Instance.new("UICorner", restoreBtn).CornerRadius = UDim.new(1, 0)
local restoreStroke = Instance.new("UIStroke", restoreBtn)
restoreStroke.Thickness = 2
restoreStroke.Color = Color3.fromRGB(90, 90, 255)

-- === CONTENT FRAME ===
local content = Instance.new("Frame", frame)
content.Size = UDim2.new(1, -20, 1, -50)
content.Position = UDim2.new(0, 10, 0, 40)
content.BackgroundTransparency = 1

-- === SLIDER CREATOR FUNCTION ===
local function createSlider(parent, labelText, min, max, default, yPos, callback)
	local label = Instance.new("TextLabel", parent)
	label.Size = UDim2.new(0, 120, 0, 22)
	label.Position = UDim2.new(0, 10, 0, yPos)
	label.BackgroundTransparency = 1
	label.Text = labelText .. ": " .. tostring(default)
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left

	local bar = Instance.new("Frame", parent)
	bar.Size = UDim2.new(0, 160, 0, 6)
	bar.Position = UDim2.new(0, 130, 0, yPos + 8)
	bar.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
	bar.BorderSizePixel = 0
	Instance.new("UICorner", bar).CornerRadius = UDim.new(1, 0)

	local fill = Instance.new("Frame", bar)
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(90, 90, 255)
	fill.BorderSizePixel = 0
	Instance.new("UICorner", fill).CornerRadius = UDim.new(1, 0)

	local dragging = false
	bar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
	end)
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local relX = math.clamp((input.Position.X - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1)
			fill.Size = UDim2.new(relX, 0, 1, 0)
			local val = math.floor(min + (max - min) * relX)
			label.Text = labelText .. ": " .. tostring(val)
			callback(val)
		end
	end)
end

-- === SLIDERS ===
local humanoid
local defaultWalk, defaultJump = 16, 50

local function setDefaults()
	if humanoid then
		defaultWalk = humanoid.WalkSpeed
		defaultJump = humanoid.JumpPower
	end
end

local function onCharacterAdded(char)
	humanoid = char:WaitForChild("Humanoid")
	setDefaults()
end

if player.Character then onCharacterAdded(player.Character) end
player.CharacterAdded:Connect(onCharacterAdded)

createSlider(content, "WalkSpeed", 8, 200, 16, 10, function(val)
	if humanoid then humanoid.WalkSpeed = val end
end)

createSlider(content, "JumpPower", 20, 200, 50, 50, function(val)
	if humanoid then humanoid.JumpPower = val end
end)

-- === MINIMIZE / RESTORE WITH ANIMATION ===
local minimized = false

local function tweenFrame(target, targetSize, targetPos, duration)
	TweenService:Create(target, TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		Size = targetSize,
		Position = targetPos
	}):Play()
end

minimize.MouseButton1Click:Connect(function()
	if minimized then return end
	minimized = true
	tweenFrame(frame, UDim2.new(0, 0, 0, 0), frame.Position, 0.25)
	task.wait(0.25)
	restoreBtn.Position = frame.Position
	frame.Visible = false
	restoreBtn.Visible = true
end)

restoreBtn.MouseButton1Click:Connect(function()
	if not minimized then return end
	minimized = false
	frame.Visible = true
	frame.Size = UDim2.new(0, 0, 0, 0)
	tweenFrame(frame, UDim2.new(0, 300, 0, 180), restoreBtn.Position, 0.25)
	restoreBtn.Visible = false
end)

-- === CTRL + G TOGGLE ===
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.G and (UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) or UserInputService:IsKeyDown(Enum.KeyCode.RightControl)) then
		local visible = frame.Visible or restoreBtn.Visible
		frame.Visible = not visible
		restoreBtn.Visible = false
	end
end)
